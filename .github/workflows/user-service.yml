name: User Service CI

on:
  push:
    paths:
      - 'services/user-service/**'
      - '.github/workflows/user-service.yml'
  pull_request:
    paths:
      - 'services/user-service/**'
      - '.github/workflows/user-service.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: user_service
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --add-host=user-db:127.0.0.1

    env:
      DATABASE_URL: postgresql://postgres:postgres@user-db:5432/user_service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd services/user-service
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@user-db:5432/user_service" >> $GITHUB_ENV
          echo "DATABASE_NAME=user_service" >> $GITHUB_ENV
          echo "DATABASE_USER=postgres" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=postgres" >> $GITHUB_ENV
          echo "DATABASE_HOST=user-db" >> $GITHUB_ENV
          echo "DATABASE_PORT=5432" >> $GITHUB_ENV

      # - name: Run code formatting check (black)
      #   run: |
      #     cd services/user-service
      #     black . --check

      # - name: Run import sorting check (isort)
      #   run: |
      #     cd services/user-service
      #     isort . --check-only

      # - name: Run linting (flake8)
      #   run: |
      #     cd services/user-service
      #     flake8 .

      # - name: Run type checking (mypy)
      #   run: |
      #     cd services/user-service
      #     mypy . --config-file ./mypy.ini

      - name: Run tests with coverage
        run: |
          cd services/user-service
          export PYTHONPATH=$(pwd)
          pytest --cov=. --cov-report=term-missing
